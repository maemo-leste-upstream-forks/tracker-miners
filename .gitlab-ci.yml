include:
  - remote: "https://gitlab.freedesktop.org/freedesktop/ci-templates/-/raw/290b79e0e78eab67a83766f4e9691be554fc4afd/templates/ci-fairy.yml"
  - remote: 'https://gitlab.freedesktop.org/freedesktop/ci-templates/-/raw/290b79e0e78eab67a83766f4e9691be554fc4afd/templates/fedora.yml'
  - remote: 'https://gitlab.freedesktop.org/freedesktop/ci-templates/-/raw/290b79e0e78eab67a83766f4e9691be554fc4afd/templates/ubuntu.yml'

variables:
  MESON_TEST_TIMEOUT_MULTIPLIER: 3
  # These can be used to see verbose log output from the functional-tests.
  # See HACKING.md for more information.
  G_MESSAGES_DEBUG: ""
  TRACKER_DEBUG: ""

  # This can be used when debugging test failures that only occur within GitLab CI.
  MESON_TEST_EXTRA_ARGS: ""

  TRACKER_TESTS_AWAIT_TIMEOUT: 60

stages:
  - review
  - prepare
  - code-review
  - build
  - test
  - analysis

.check-template: &check
  extends:
    - .fdo.ci-fairy
  artifacts:
    expire_in: 1 week
    paths:
      - check-junit-report.xml
    reports:
      junit: check-junit-report.xml

check-commit-log:
  variables:
    GIT_DEPTH: "100"
  stage: review
  script:
    - if [[ x"$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" != "x" ]] ;
      then
        ci-fairy check-commits --junit-xml=check-junit-report.xml ;
      else
        echo "Not a merge request" ;
      fi
  <<: *check

check-merge-request:
  variables:
    GIT_STRATEGY: none
  stage: review
  script:
    - if [[ x"$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" != "x" ]] ;
      then
        ci-fairy check-merge-request --require-allow-collaboration --junit-xml=check-junit-report.xml ;
      else
        echo "Not a merge request" ;
      fi
  <<: *check

.tracker-miners.fedora@common:
  variables:
    BASE_TAG: '2021-08-04.1'
    FDO_UPSTREAM_REPO: GNOME/tracker
    FDO_DISTRIBUTION_PACKAGES: 'clang clang-analyzer gcovr git libasan libubsan python3-gobject python3-pip umockdev-devel xmlto uncrustify patch diffutils gstreamer1-plugins-good redhat-rpm-config'
    FDO_DISTRIBUTION_EXEC: |
      dnf install -y 'dnf-command(builddep)' &&
      dnf builddep -y tracker tracker-miners --setopt=install_weak_deps=False &&
      dnf clean all &&
      pip3 install beautifulsoup4 mkdocs mkdocs-cinder tap.py meson &&
      dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm &&
      dnf install -y --setopt=install_weak_deps=False gstreamer1-libav &&
      curl --get 'https://www.flamingspork.com/projects/libeatmydata/libeatmydata-105.tar.gz' --output libeatmydata-105.tar.gz &&
      tar -x -f ./libeatmydata-105.tar.gz &&
      cd libeatmydata-105 &&
      ./configure --prefix=/usr &&
      make install &&
      sed -e '/dpkg-architecture/ d' -i /usr/bin/eatmydata &&
      sed -e 's@shlib="/usr/lib/$DEB_BUILD_MULTIARCH/eatmydata.sh@shlib="/usr/libexec/eatmydata.sh@' -i /usr/bin/eatmydata &&
      cd .. &&
      rm ./libeatmydata-105.tar.gz &&
      rm -Rf ./libeatmydata-105

.tracker-miners.ubuntu@common:
  variables:
    BASE_TAG: '2021-08-04.0'
    FDO_UPSTREAM_REPO: GNOME/tracker
    FDO_DISTRIBUTION_PACKAGES: 'python3-tap umockdev libumockdev-dev upower asciidoc-base git libgrss-dev eatmydata'
    FDO_DISTRIBUTION_EXEC: |
      export DEBIAN_FRONTEND=noninteractive &&
      sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list &&
      apt-get -yq update && apt-get -yq upgrade &&
      apt-get -yq build-dep tracker tracker-miners

.tracker-miners.fedora:34@x86_64:
  extends: .tracker-miners.fedora@common
  variables:
    FDO_DISTRIBUTION_VERSION: 34
    FDO_DISTRIBUTION_TAG: "x86_64-${BASE_TAG}"

.tracker-miners.fedora:rawhide@x86_64:
  extends: .tracker-miners.fedora@common
  variables:
    FDO_DISTRIBUTION_VERSION: rawhide
    FDO_DISTRIBUTION_TAG: "x86_64-${BASE_TAG}"

.tracker-miners.fedora:34@aarch64:
  extends: .tracker-miners.fedora@common
  variables:
    FDO_DISTRIBUTION_VERSION: 34
    FDO_DISTRIBUTION_TAG: "aarch64-${BASE_TAG}"
  tags:
    - aarch64

.tracker-miners.ubuntu:rolling@x86_64:
  extends: .tracker-miners.ubuntu@common
  variables:
    FDO_DISTRIBUTION_VERSION: rolling
    FDO_DISTRIBUTION_TAG: "x86_64-${BASE_TAG}"

build-fedora-container@x86_64:
  extends:
    - .fdo.container-build@fedora
    - .tracker-miners.fedora:34@x86_64
  stage: prepare
  variables:
    GIT_STRATEGY: none
  needs:
    - check-commit-log
    - check-merge-request

build-fedora-rawhide-container@x86_64:
  extends:
    - .fdo.container-build@fedora
    - .tracker-miners.fedora:rawhide@x86_64
  stage: prepare
  variables:
    GIT_STRATEGY: none
  allow_failure: true
  needs:
    - check-commit-log
    - check-merge-request

build-fedora-container@aarch64:
  extends:
    - .fdo.container-build@fedora
    - .tracker-miners.fedora:34@aarch64
  stage: prepare
  variables:
    GIT_STRATEGY: none
  needs:
    - check-commit-log
    - check-merge-request

build-ubuntu-container@x86_64:
  extends:
    - .fdo.container-build@ubuntu
    - .tracker-miners.ubuntu:rolling@x86_64
  stage: prepare
  variables:
    GIT_STRATEGY: none
  needs:
    - check-commit-log
    - check-merge-request

check-code-style:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:34@x86_64
  needs:
    - build-fedora-container@x86_64
  stage: code-review
  script:
    - git fetch origin master;
      export common_parent_sha=$(diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME:-${CI_DEFAULT_BRANCH}}") <(git rev-list --first-parent HEAD) | head -1) ;
      python3 -u ./check-style.py --dry-run --sha $common_parent_sha ;
  allow_failure: true

.build-template: &build
  stage: build
  script:
    # We can build and test tracker-miners against tracker just by building
    # tracker as a submodule.
    - .gitlab-ci/checkout-tracker.sh
    - echo "Building tracker.git commit $(git -C ./subprojects/tracker rev-parse HEAD)"
    - mkdir build
    - cd build
    - meson .. --prefix=/usr -Dtracker_core=subproject -Db_lto=true -Db_coverage=true -Dtests_tap_protocol=true -Dtracker:docs=false
    - ninja
  artifacts:
    expire_in: 1 day
    paths:
      - build

build-fedora@x86_64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:34@x86_64
  needs:
    - build-fedora-container@x86_64
  <<: *build

build-fedora-rawhide@x86_64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:rawhide@x86_64
  needs:
    - build-fedora-rawhide-container@x86_64
  allow_failure: true
  <<: *build

build-fedora@aarch64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:34@aarch64
  needs:
    - build-fedora-container@aarch64
  allow_failure: true
  <<: *build

build-ubuntu-rolling@x86_64:
  extends:
    - .fdo.distribution-image@ubuntu
    - .tracker-miners.ubuntu:rolling@x86_64
  needs:
    - build-ubuntu-container@x86_64
  <<: *build

.test_template: &test
  stage: test

  script:
    - .gitlab-ci/checkout-tracker.sh
    - cd build
    - ninja
    - |
      # Remove the many "CI_" variables from the environment. Meson dumps the
      # whole environment for every failed test, and that gives a whole
      # screenful of junk each time unless we strip these.
      unset $(env|grep -o '^CI_[^=]*')

      dbus-run-session -- env LANG=C.UTF-8 LC_ALL=C.UTF-8 eatmydata meson test --suite tracker-miners --print-errorlogs

  after_script:
    - |
      echo "Distribution: "
      echo
      egrep '^NAME=|^VERSION=' /etc/os-release
      echo
      echo "Test suite settings:"
      echo
      echo "G_MESSAGES_DEBUG: ${G_MESSAGES_DEBUG}"
      echo "TRACKER_DEBUG: ${TRACKER_DEBUG}"
      echo "MESON_TEST_EXTRA_ARGS: ${MESON_TEST_EXTRA_ARGS}"
      echo
      echo "These values can be set at https://gitlab.gnome.org/GNOME/tracker/pipelines/new"

  artifacts:
    expire_in: 1 day
    when: always
    paths:
    - build/meson-logs/*.txt
    reports:
      junit: "build/meson-logs/testlog.junit.xml"

test-fedora@x86_64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:34@x86_64
  needs:
    - build-fedora@x86_64
  <<: *test

test-fedora-rawhide@x86_64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:rawhide@x86_64
  needs:
    - build-fedora-rawhide@x86_64
  allow_failure: true
  <<: *test

test-fedora@aarch64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:34@aarch64
  needs:
    - build-fedora@aarch64
  allow_failure: true
  <<: *test

test-ubuntu@x86_64:
  extends:
    - .fdo.distribution-image@ubuntu
    - .tracker-miners.ubuntu:rolling@x86_64
  needs:
    - build-ubuntu-rolling@x86_64
  <<: *test

coverage-analysis:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:34@x86_64
  stage: analysis
  allow_failure: true
  script:
    - .gitlab-ci/checkout-tracker.sh
    - mkdir -p coverage-build/coveragereport
    - cd coverage-build
    - meson .. --prefix=/usr -Dtracker_core=subproject -Db_lto=true -Db_coverage=true -Dseccomp=false -Dtracker:docs=false
    - ninja
    - env LANG=C.UTF-8 LC_ALL=C.UTF-8 dbus-run-session eatmydata meson test --print-errorlogs ${MESON_TEST_EXTRA_ARGS}
    - gcovr --html-details --print-summary --root=.. --exclude=subprojects --exclude=../subprojects --exclude=../tests --output coveragereport/index.html
  coverage: '/^lines: (\d+\.\d+\%)/'
  artifacts:
    when: always
    paths:
    - coverage-build/coveragereport
  needs:
    - test-fedora@x86_64

coverity:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:34@x86_64
  stage: analysis
  allow_failure: true
  script:
    # Build tracker, we must go out the subproject route as we don't want
    # tracker code to be included in the coverity reports for tracker-miners.
    - .gitlab-ci/checkout-tracker.sh
    - export INSTALL=`pwd`/install
    - pushd subprojects/tracker; meson build --libdir lib --prefix $INSTALL -Ddocs=false; pushd build; ninja install; popd; popd
    - curl https://scan.coverity.com/download/linux64 --data "token=$COVERITY_TOKEN&project=tracker-miners" --output /tmp/coverity_tool.tgz
    - tar zxf /tmp/coverity_tool.tgz
    - mkdir coverity-build
    - export CC=clang
    - pushd coverity-build
    - meson --pkg-config-path=$INSTALL/lib/pkgconfig ..
    - ../cov-analysis-linux64-*/bin/cov-build --dir cov-int ninja
    - tar czf cov-int.tar.gz cov-int
    - popd
    - curl https://scan.coverity.com/builds?project=tracker-miners
      --form token=$COVERITY_TOKEN --form email=carlosg@gnome.org
      --form file=@coverity-build/cov-int.tar.gz --form version="`git describe --tags`"
      --form description="gitlab CI build"
  only:
    - master
